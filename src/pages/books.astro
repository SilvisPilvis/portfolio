---
const { title, picture, description, link} = Astro.props;

import { Image, getImage } from 'astro:assets';

import { getAverageColor } from 'fast-average-color-node';

import { readFile } from 'node:fs/promises';
import path from "path";

const base = import.meta.env.BASE_URL;

let contents: Buffer<ArrayBufferLike> = Buffer.alloc(0);
if (picture) {
  try {
    const rel = picture.startsWith('/') ? picture.slice(1) : picture;
    const absolute = path.join(process.cwd(), 'public', rel);
    // console.log(`Reading: ${absolute}`);
    contents = await readFile(absolute);
  } catch (err: any) {
    console.error(err.message);
  }

}

const color = await getAverageColor(contents);
---

<section style={`--dynamic-decoration-color: ${color.hex};`} class=`text-white flex flex-col items-center justify-center gap-2 bg-gray-900 rounded-md shadow-lg bg-opacity-80 m-4 hover:outline-4 outline-white hover:outline-dashed outline-offset-2`>
    <a href={link} class=`text-2xl font-bold text-center hover:underline hover:underline-offset-8 hover:decoration-4 decoration-[var(--dynamic-decoration-color)] py-2`>{title}</a>
    <Image src=`${base}${picture}` inferSize={true} width={72} height={72} loading={"lazy"} alt=`${title} Logo` class="min-w-18 min-h-18 max-w-18 max-h-18 rounded-md object-contain" />
    <p class="text-center p-4">{description}</p>
</section>
