---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
const title = 'My Skills';
---

<Layout title={title}>
  <main>
    <div class="grid grid-cols-1 gap-4 md:grid-cols-2">

      <Card title="Apache" picture="/icons/apache.png" description="Apache2 HTTP Server is one of the most widely used web servers, known for its modular architecture and extensive configuration options. Supporting various programming languages through modules like mod_php and mod_python, Apache provides robust features for virtual hosting, SSL/TLS, and URL rewriting. Despite being older than Nginx, Apache remains popular for its flexibility and comprehensive documentation." link="https://httpd.apache.org/" />

      <Card title="React" picture="/icons/react.png" description="React is Facebook's JavaScript library for building user interfaces, particularly single-page applications with complex, interactive components. Using a component-based architecture and virtual DOM, React efficiently updates and renders components when data changes. Its declarative approach, extensive ecosystem, and strong community support have made it one of the most popular frontend frameworks for web development." link="https://reactjs.org/" />

      <Card title="Next.js" picture="/icons/next.png" description="Next.js is a React framework that provides server-side rendering, static site generation, and full-stack capabilities out of the box. Built by Vercel, Next.js simplifies React development with features like automatic code splitting, optimized performance, and built-in routing. It's become the go-to choice for production React applications, offering excellent developer experience and deployment options." link="https://nextjs.org/" />

      <Card title="Astro" picture="/icons/astro.png" description="Astro is a modern static site generator that allows you to build faster websites by shipping less JavaScript to the browser. Using an 'islands architecture,' Astro renders components to HTML at build time and only hydrates interactive components when needed. It supports multiple frameworks like React, Vue, and Svelte, making it ideal for content-focused websites and blogs." link="https://astro.build/" />

      <Card title="Tailwind CSS" picture="/icons/tailwind.png" description="Tailwind CSS is an open-source CSS framework. Unlike other frameworks, like Bootstrap, it does not provide a series of predefined classes for elements such as buttons or tables. Instead, it creates a list of 'utility' classes that can be used to style elements in a variety of ways. Tailwind CSS is highly customizable and offers a wide range of features, including responsive design, dark mode, and custom themes." link="https://tailwindcss.com/" />

      <Card title="Docker" picture="/icons/docker.png" description="Docker is a containerization platform that packages applications and their dependencies into lightweight, portable containers. By creating isolated environments that include everything needed to run an application, Docker ensures consistency across development, testing, and production environments. It has revolutionized software deployment and microservices architecture, making it easier to scale applications and manage complex distributed systems." link="https://www.docker.com/" />

      <Card title="Git" picture="/icons/git.png" description="Git is a distributed version control system that tracks changes in source code during software development. Created by Linus Torvalds, Git allows multiple developers to work on projects simultaneously through branching, merging, and distributed repositories. Its speed, data integrity, and support for distributed workflows have made it the standard version control system for software development." link="https://git-scm.com/" />

      <Card title="Nginx" picture="/icons/nginx.png" description="Nginx is a high-performance web server and reverse proxy known for its low memory usage and ability to handle thousands of concurrent connections. Originally designed to solve the C10K problem, Nginx excels at serving static content, load balancing, and acting as an API gateway. Its event-driven architecture and configuration flexibility make it popular for modern web infrastructure." link="https://www.nginx.com/" />

      <Card title="Inertia.js" picture="/icons/inertia.png" description="Inertia.js is a modern approach to building single-page applications without the complexity of a separate API. It allows developers to create SPAs using server-side routing and controllers while rendering with client-side frameworks like React, Vue, or Svelte. Inertia acts as a bridge between backend and frontend, eliminating the need for building APIs and managing separate application states while maintaining the benefits of modern JavaScript frameworks." link="https://inertiajs.com/" />

      <Card title="Go" picture="/icons/go.png" description="Go was created by Google to address large-scale software development challenges, particularly in distributed systems. The language prioritizes simplicity and fast compilation, featuring built-in concurrency through goroutines and channels. Go's minimalist design and strong standard library make it excellent for web services, microservices, and DevOps tooling like Docker and Kubernetes." link="https://go.dev/" />

      <Card title="Gin" picture="/icons/gin.png" description="Gin is a web framework written in Go that provides a fast and efficient way to build web applications. Its simplicity and flexibility make it a popular choice for building RESTful APIs, web services, and microservices. Built on top of the Gorilla Web Toolkit, Gin offers features like middleware, routing, and JSON serialization, making it easy to build robust and scalable web applications." link="https://gin-gonic.com/" />

      <Card title="PHP" picture="/icons/php.png" description="PHP is a server-side scripting language designed specifically for web development, powering a significant portion of websites including WordPress and Facebook. Known for its ease of learning and deployment, PHP offers extensive web-focused features, database connectivity, and a vast ecosystem of frameworks like Laravel and Symfony. Despite competition from other languages, PHP continues to evolve with modern features and improved performance." link="https://www.php.net/" />

      <Card title="MySQL" picture="/icons/mysql.png" description="MySQL is an open-source relational database management system known for its reliability, ease of use, and strong performance. Widely used in web applications and enterprise systems, MySQL supports ACID transactions, replication, and partitioning. Its compatibility with various programming languages and platforms has made it one of the most popular databases for web development and data storage." link="https://www.mysql.com/" />

      <Card title="PostgreSQL" picture="/icons/postgres.png" description="PostgreSQL is an advanced open-source relational database system known for its robustness, extensibility, and standards compliance. Supporting both SQL and JSON querying, PostgreSQL offers advanced features like custom data types, full-text search, and geographic data support. Its reliability and feature richness make it popular for enterprise applications and data-intensive systems." link="https://www.postgresql.org/" />

      <Card title="Redis" picture="/icons/redis.png" description="Redis is an in-memory data structure store that serves as a database, cache, and message broker. Known for its exceptional performance, Redis supports various data types including strings, hashes, lists, and sets, with operations executing in microseconds. It's widely used for caching, session management, real-time analytics, and pub/sub messaging systems where speed and low latency are critical." link="https://redis.io/" />

      <Card title="MongoDB" picture="/icons/mongodb.png" description="MongoDB is a document-oriented NoSQL database that stores data in flexible, JSON-like documents instead of traditional table rows. Designed for scalability and developer productivity, MongoDB handles complex data structures naturally and supports horizontal scaling through sharding. It's popular for modern applications requiring flexible schemas and rapid development cycles." link="https://www.mongodb.com/" />

      <Card title="SQLite" picture="/icons/sqlite.png" description="SQLite is a lightweight, serverless database engine that stores data in a single file on disk. Unlike traditional database systems, SQLite requires no separate server process and can be embedded directly into applications. Its simplicity, reliability, and zero-configuration nature make it perfect for mobile apps, desktop applications, embedded systems, and development environments where a full database server would be overkill." link="https://www.sqlite.org/" />

      <Card title="Node.js" picture="/icons/nodejs.png" description="Node.js is a JavaScript runtime built on Chrome's V8 engine that enables server-side JavaScript development. By using an event-driven, non-blocking I/O model, Node.js excels at handling concurrent connections and real-time applications. Its vast ecosystem through npm and the ability to use JavaScript across the entire stack has made it popular for web servers, APIs, microservices, and command-line tools." link="https://nodejs.org/" />

      <Card title="Express.js" picture="/icons/express.png" description="Express.js is a minimal and flexible Node.js web framework that provides robust features for building web applications and APIs. Known for its simplicity and extensive middleware ecosystem, Express allows developers to quickly create server-side applications with routing, templating, and database integration. It remains one of the most popular backend frameworks in the JavaScript ecosystem." link="https://expressjs.com/" />

      <Card title="Vue.js" picture="/icons/vue.png" description="Vue.js is a progressive JavaScript framework for building user interfaces that can be incrementally adopted into existing projects. Created by Evan You, Vue combines the best aspects of React and Angular with a gentler learning curve and excellent documentation. Its template-based syntax, reactive data binding, and component system make it popular for both small projects and large-scale applications." link="https://vuejs.org/" />

      <Card title="Starlight.js" picture="/icons/starlight.png" description="Astro Starlight is Astro's official documentation theme designed specifically for creating beautiful, accessible documentation sites. Built with TypeScript support, internationalization, search functionality, and mobile responsiveness out of the box, Starlight provides a polished solution for technical documentation. It combines Astro's performance benefits with documentation-specific features like sidebar navigation and code syntax highlighting." link="https://starlight.astro.build/" />

      <Card title="Laravel" picture="/icons/laravel.png" description="Laravel is a PHP web framework known for its elegant syntax and developer-friendly features like Eloquent ORM, Artisan CLI, and built-in authentication. Created by Taylor Otwell, Laravel follows the MVC pattern and includes features like routing, middleware, and database migrations out of the box. It's widely used for building web applications, APIs, and enterprise software due to its robust ecosystem and extensive documentation." link="https://laravel.com/" />

      <Card title="Linux" picture="/icons/linux.png" description="Linux is an open-source operating system kernel that powers everything from servers and smartphones to supercomputers and embedded devices. Known for its stability, security, and customizability, Linux distributions like Ubuntu, CentOS, and Debian dominate server environments and cloud infrastructure. Its command-line interface and extensive package management systems make it the preferred choice for developers and system administrators." link="https://www.linux.org/" />

      <Card title="C" picture="/icons/c.png" description="C is one of the most influential programming languages ever created, serving as the foundation for countless other languages and systems. Its minimalist design provides low-level access to memory and system resources while maintaining portability across platforms. C remains the language of choice for operating system kernels, embedded systems, and performance-critical applications where direct hardware control is essential." link="https://en.wikipedia.org/wiki/C_(programming_language)" />

      <Card title="C++" picture="/icons/c++.png" description="c++ evolved from C by adding object-oriented programming features and generic programming capabilities. Supporting multiple programming paradigms, C++ provides fine-grained control over system resources while offering high-level abstractions like classes and templates. It's extensively used in game development, desktop applications, and high-performance computing where both performance and abstraction are crucial." link="https://en.wikipedia.org/wiki/C%2B%2B" />

      <Card title="C#" picture="/icons/csharp.png" description="c# gis Microsoft's object-oriented programming language designed for the .NET ecosystem, combining power with simplicity through automatic memory management and strong typing. The language excels in enterprise applications, web development with ASP.NET, and cross-platform development with modern .NET. C# continues evolving with features like async/await and LINQ, making it suitable for everything from web APIs to game development with Unity." link="https://en.wikipedia.org/wiki/C_Sharp_(programming_language)" />

      <Card title="Playwright" picture="/icons/playwright.png" description="Playwright is Microsoft's cross-browser testing framework that supports Chromium, Firefox, and Safari with a single API. Built for modern web applications, Playwright offers faster execution, better reliability, and advanced features like network interception and mobile emulation. It's become increasingly popular for its speed and comprehensive browser support in automated testing." link="https://playwright.dev/" />

      <Card title="Cypress" picture="/icons/cypress.png" description="Cypress is a modern end-to-end testing framework that runs directly in the browser, providing real-time debugging and automatic waiting for elements. Unlike traditional testing tools, Cypress offers time-travel debugging, automatic screenshots, and video recording of test runs. Its developer-friendly API and reliable test execution have made it popular for testing modern web applications." link="https://www.cypress.io/" />

      <Card title="Pytorch" picture="/icons/pytorch.png" description="PyTorch is Facebook's open-source machine learning framework that provides dynamic computational graphs and intuitive Python APIs. Known for its flexibility and ease of debugging, PyTorch has become the preferred choice for research and prototyping in deep learning. Its dynamic nature allows for more intuitive model building and modification during runtime, making it popular in academic and research environments." link="https://pytorch.org/" />

      <Card title="TensorFlow" picture="/icons/tensorflow.png" description="TensorFlow is Google's comprehensive machine learning platform that supports both research and production deployments. With its static computation graphs and extensive ecosystem, TensorFlow excels at large-scale machine learning applications and deployment across various platforms. TensorFlow Serving, Lite, and JS extend its capabilities to production servers, mobile devices, and web browsers respectively." link="https://www.tensorflow.org/" />

      <Card title="Transformers" picture="/icons/transformers.png" description="Transformers is Hugging Face's library that provides state-of-the-art pre-trained models for natural language processing tasks. Built on top of PyTorch and TensorFlow, it offers easy access to models like BERT, GPT, and T5 for tasks including text classification, translation, and generation. The library democratizes access to cutting-edge NLP models with simple, standardized APIs." link="https://huggingface.co/docs/transformers/index" />

      <Card title="Jquery" picture="/icons/jquery.png" description="jQuery is a JavaScript library that simplified DOM manipulation, event handling, and Ajax requests during the era of browser inconsistencies. By providing a unified API that worked across different browsers, jQuery became one of the most popular JavaScript libraries. While modern frameworks have largely replaced it, jQuery's influence on web development and its 'write less, do more' philosophy helped shape how developers approach client-side scripting." link="https://jquery.com/" />

      <Card title="Rust" picture="/icons/rust.png" description="Rust is a systems programming language that emphasizes memory safety without sacrificing performance. Through its innovative ownership system and borrow checker, Rust prevents common programming errors like null pointer dereferences and memory leaks at compile time. This makes it ideal for operating systems, web browsers, and blockchain applications, offering the performance of low-level languages with the safety of high-level ones." link="https://www.rust-lang.org/" />

      <Card title="Bun.js" picture="/icons/bun.png" description="Bun is a modern JavaScript runtime and toolkit designed to be a faster alternative to Node.js. Built from scratch in Zig, Bun includes a bundler, test runner, and package manager, aiming to replace multiple tools with a single, high-performance solution. It offers significantly faster startup times and execution compared to Node.js while maintaining compatibility with most Node.js APIs and npm packages." link="https://bun.sh/" />

      <Card title="Typescript" picture="/icons/typescript.png" description="TypeScript is Microsoft's superset of JavaScript that adds static type checking to the dynamically-typed language. By providing optional static typing, interfaces, and advanced IDE support, TypeScript helps developers catch errors at compile time, making JavaScript codebases more maintainable and scalable. It has become increasingly popular in large-scale web applications with frameworks like React and Angular." link="https://www.typescriptlang.org/" />

      <Card title="Vitejs" picture="/icons/vitejs.png" description="Vite is a build tool that provides fast development servers and optimized production builds through native ES modules and esbuild. Created by Evan You, Vite significantly improves development experience with instant hot module replacement and fast cold starts. It supports various frameworks and has become the foundation for many modern web development toolchains." link="https://vitejs.dev/" />

      <Card title="Vitest" picture="/icons/vitest.png" description="Vitest is a blazing fast unit testing framework powered by Vite's transformation pipeline. Designed as a modern alternative to Jest, Vitest offers native ESM support, TypeScript integration, and hot module replacement during testing. Its speed and seamless integration with Vite-based projects have made it the preferred testing solution for modern frontend development." link="https://vitest.dev/" />

      <Card title="Filament" picture="/icons/filament.png" description="Filament PHP is a modern admin panel and form builder for Laravel applications, providing a clean and intuitive interface for managing application data. Built with Livewire and Alpine.js, Filament offers pre-built components, tables, forms, and dashboards that can be easily customized. It significantly reduces development time for creating admin interfaces and content management systems in Laravel projects." link="https://filamentphp.com/" />

      <Card title="PHP Pest" picture="/icons/php_pest.png" description="Pest is a modern testing framework for PHP that focuses on simplicity and readability, offering an elegant alternative to PHPUnit. With its expressive syntax inspired by Jest, Pest makes writing tests more enjoyable and accessible. It provides powerful features like parallel testing, coverage reporting, and extensive plugin ecosystem while maintaining compatibility with existing PHPUnit tests, making it easy to adopt in existing projects." link="https://pestphp.com/" />
      
      <Card title="Gleam" picture="/icons/lucy.png" description="Gleam is a modern functional programming language that runs on the Erlang Virtual Machine, designed to be type-safe and scalable with familiar syntax. Combining Erlang's fault-tolerance and actor-model concurrency with a robust static type system, Gleam emphasizes immutability and functional programming principles. It's well-suited for building concurrent, distributed systems while offering a more approachable syntax for mainstream developers." link="https://gleam.run/" />

    </div>
  </main>
</Layout>